[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\lmjim\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\lmjim\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.7.2 (Amazon.com Inc. Java 1.8.0_362)
[debug]       Load.loadUnit: plugins took 54.8376ms
[debug]       Load.loadUnit: defsScala took 0.3763ms
[debug] [Loading] Scanning directory C:\Users\lmjim\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\lmjim\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 10.0059 ms
[debug]           Load.resolveProject(global-plugins) took 28.8779ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\lmjim\.sbt\1.0\plugins, plugins: List(<none>))) took 53.7884ms
[debug] [Loading] Done in C:\Users\lmjim\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 65.3648ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.1538ms
[debug]     Load.loadUnit(file:/C:/Users/lmjim/.sbt/1.0/plugins/, ...) took 125.3672ms
[debug]   Load.apply: load took 298.2823ms
[debug]   Load.apply: resolveProjects took 3.7667ms
[debug]   Load.apply: finalTransforms took 30.4394ms
[debug]   Load.apply: config.delegates took 4.0408ms
[debug]   Load.apply: Def.make(settings)... took 176.4797ms
[debug]   Load.apply: structureIndex took 51.8114ms
[debug]   Load.apply: mkStreams took 1.5399ms
[info] loading global plugins from C:\Users\lmjim\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3846.8256ms
[debug]           Load.loadUnit: plugins took 18.0362ms
[debug]           Load.loadUnit: defsScala took 0.0028ms
[debug] [Loading] Scanning directory D:\Otros proyectos\TFG Scala\Proyecto\project
[debug]             Load.loadUnit: mkEval took 4.9635ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\Otros proyectos\TFG Scala\Proyecto\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.0062 ms
[info] loading settings for project proyecto-build from idea.sbt ...
[debug]               Load.resolveProject(proyecto-build) took 1.6849ms
[debug]             Load.loadTransitive: finalizeProject(Project(id proyecto-build, base: D:\Otros proyectos\TFG Scala\Proyecto\project, plugins: List(<none>))) took 3.0003ms
[debug] [Loading] Done in D:\Otros proyectos\TFG Scala\Proyecto\project, returning: (proyecto-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1282.5408ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.3602ms
[debug]         Load.loadUnit(file:/D:/Otros%20proyectos/TFG%20Scala/Proyecto/project/, ...) took 1304.4434ms
[debug]       Load.apply: load took 1305.2004ms
[debug]       Load.apply: resolveProjects took 0.0967ms
[debug]       Load.apply: finalTransforms took 3.6861ms
[debug]       Load.apply: config.delegates took 0.2205ms
[debug]       Load.apply: Def.make(settings)... took 31.7487ms
[debug]       Load.apply: structureIndex took 12.0687ms
[debug]       Load.apply: mkStreams took 0.0029ms
[info] loading project definition from D:\Otros proyectos\TFG Scala\Proyecto\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 2007.1049ms
[debug]     Load.loadUnit: defsScala took 0.0023ms
[debug] [Loading] Scanning directory D:\Otros proyectos\TFG Scala\Proyecto
[debug]       Load.loadUnit: mkEval took 0.1879ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.0429 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 18.1618ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: D:\Otros proyectos\TFG Scala\Proyecto, plugins: List(<none>))) took 20.2014ms
[debug] [Loading] Done in D:\Otros proyectos\TFG Scala\Proyecto, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 698.7712ms
[debug]     Load.loadUnit: cleanEvalClasses took 4.6783ms
[debug]   Load.loadUnit(file:/D:/Otros%20proyectos/TFG%20Scala/Proyecto/, ...) took 2711.0237ms
[debug] Load.apply: load took 2711.8927ms
[debug] Load.apply: resolveProjects took 0.0805ms
[debug] Load.apply: finalTransforms took 11.0222ms
[debug] Load.apply: config.delegates took 0.1289ms
[debug] Load.apply: Def.make(settings)... took 28.17ms
[debug] Load.apply: structureIndex took 16.1149ms
[debug] Load.apply: mkStreams took 0.0075ms
[info] set current project to PruebasSpark (in build file:/D:/Otros%20proyectos/TFG%20Scala/Proyecto/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 59145 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 59145, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to PruebasSpark (in build file:/D:/Otros%20proyectos/TFG%20Scala/Proyecto/)
[debug] > Exec(idea-shell, None, None)
