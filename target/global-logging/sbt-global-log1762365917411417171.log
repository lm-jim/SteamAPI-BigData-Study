[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\lmjim\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\lmjim\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.7.2 (Amazon.com Inc. Java 1.8.0_362)
[debug]       Load.loadUnit: plugins took 98.7685ms
[debug]       Load.loadUnit: defsScala took 0.3399ms
[debug] [Loading] Scanning directory C:\Users\lmjim\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\lmjim\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 10.8944 ms
[debug]           Load.resolveProject(global-plugins) took 36.9116ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\lmjim\.sbt\1.0\plugins, plugins: List(<none>))) took 127.8475ms
[debug] [Loading] Done in C:\Users\lmjim\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 166.2166ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.1957ms
[debug]     Load.loadUnit(file:/C:/Users/lmjim/.sbt/1.0/plugins/, ...) took 316.0288ms
[debug]   Load.apply: load took 479.0066ms
[debug]   Load.apply: resolveProjects took 7.8423ms
[debug]   Load.apply: finalTransforms took 65.6597ms
[debug]   Load.apply: config.delegates took 9.7649ms
[debug]   Load.apply: Def.make(settings)... took 500.8709ms
[debug]   Load.apply: structureIndex took 117.2836ms
[debug]   Load.apply: mkStreams took 3.7315ms
[info] loading global plugins from C:\Users\lmjim\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3048.9938ms
[debug]           Load.loadUnit: plugins took 26.1962ms
[debug]           Load.loadUnit: defsScala took 0.0038ms
[debug] [Loading] Scanning directory D:\Otros proyectos\TFG Scala\SteamAPI-BigData-Study\project
[debug]             Load.loadUnit: mkEval took 7.3617ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\Otros proyectos\TFG Scala\SteamAPI-BigData-Study\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.2264 ms
[info] loading settings for project steamapi-bigdata-study-build from plugins.sbt,idea.sbt ...
[debug]               Load.resolveProject(steamapi-bigdata-study-build) took 3.4089ms
[debug]             Load.loadTransitive: finalizeProject(Project(id steamapi-bigdata-study-build, base: D:\Otros proyectos\TFG Scala\SteamAPI-BigData-Study\project, plugins: List(<none>))) took 6.2875ms
[debug] [Loading] Done in D:\Otros proyectos\TFG Scala\SteamAPI-BigData-Study\project, returning: (steamapi-bigdata-study-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2515.0328ms
[debug]           Load.loadUnit: cleanEvalClasses took 7.8277ms
[debug]         Load.loadUnit(file:/D:/Otros%20proyectos/TFG%20Scala/SteamAPI-BigData-Study/project/, ...) took 2550.0651ms
[debug]       Load.apply: load took 2551.5584ms
[debug]       Load.apply: resolveProjects took 0.1532ms
[debug]       Load.apply: finalTransforms took 8.0136ms
[debug]       Load.apply: config.delegates took 0.3604ms
[debug]       Load.apply: Def.make(settings)... took 221.5216ms
[debug]       Load.apply: structureIndex took 38.3391ms
[debug]       Load.apply: mkStreams took 0.004ms
[info] loading project definition from D:\Otros proyectos\TFG Scala\SteamAPI-BigData-Study\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 5365.277ms
[debug]     Load.loadUnit: defsScala took 0.0045ms
[debug] [Loading] Scanning directory D:\Otros proyectos\TFG Scala\SteamAPI-BigData-Study
[debug]       Load.loadUnit: mkEval took 0.2131ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbtassembly.AssemblyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtassembly.AssemblyPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,sbtassembly.AssemblyPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.5981 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 20.0507ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: D:\Otros proyectos\TFG Scala\SteamAPI-BigData-Study, plugins: List(<none>))) took 23.0278ms
[debug] [Loading] Done in D:\Otros proyectos\TFG Scala\SteamAPI-BigData-Study, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1670.3048ms
[debug]     Load.loadUnit: cleanEvalClasses took 5.6957ms
[debug]   Load.loadUnit(file:/D:/Otros%20proyectos/TFG%20Scala/SteamAPI-BigData-Study/, ...) took 7041.9041ms
[debug] Load.apply: load took 7043.0678ms
[debug] Load.apply: resolveProjects took 0.0841ms
[debug] Load.apply: finalTransforms took 15.5267ms
[debug] Load.apply: config.delegates took 0.2704ms
[debug] Load.apply: Def.make(settings)... took 34.4503ms
[debug] Load.apply: structureIndex took 23.0203ms
[debug] Load.apply: mkStreams took 0.0031ms
[info] set current project to SteamAPI_BigData_Study (in build file:/D:/Otros%20proyectos/TFG%20Scala/SteamAPI-BigData-Study/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 61544 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 61544, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to SteamAPI_BigData_Study (in build file:/D:/Otros%20proyectos/TFG%20Scala/SteamAPI-BigData-Study/)
[debug] > Exec(idea-shell, None, None)
